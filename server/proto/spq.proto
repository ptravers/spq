syntax = "proto3";

package spq_generated;

service SortingPriorityQueueService {
  rpc Dequeue(DequeueRequest) returns (ItemResponse) {}
  rpc PeekNextItem(PeekItemRequest) returns (ItemResponse) {}
  rpc GetSize(GetSizeRequest) returns (GetSizeResponse) {}
  rpc Enqueue(EnqueueRequest) returns (EnqueueResponse) {}
  rpc GetEpoch(GetEpochRequest) returns (GetEpochResponse) {}
}

message EnqueueRequest {
  message feature {
    int64 value = 1;
    string name = 2;
  }
  bytes item = 1;
  repeated feature features = 2;
}

message EnqueueResponse {
  int64 size = 1;
}

message GetSizeRequest {
}

message GetSizeResponse {
  int64 size = 1;
}

message PeekItemRequest {
}

message DequeueRequest {
}

message ItemResponse {
  bytes item = 1;
  bool hasItem = 2;
  int64 size = 3;
}

message GetEpochRequest {
}

message GetEpochResponse {
  int64 epoch = 1;
}

service HealthService {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}
